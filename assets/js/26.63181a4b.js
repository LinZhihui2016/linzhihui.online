(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{382:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("Python语言中有“类（class）”的概念，写好一个类后，需要实例化，对象就是类的实例化（理解为爸爸儿子就好了）。JavaScript的爸爸儿子则是构造函数和原型链。原型和原型链构成了JS的全部，是重中之重的基础知识。")])]),t._v(" "),a("h1",{attrs:{id:"原型及原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型及原型链"}},[t._v("#")]),t._v(" 原型及原型链")]),t._v(" "),a("h2",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),a("div",{staticClass:"language-JavaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun_father")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义一个函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fun_son "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fun_father")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//father作为构造函数，儿子则是father的一个实例")]),t._v("\nfun_father"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" fun_son"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子的__proto__指向父的prototype")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"包装对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装对象"}},[t._v("#")]),t._v(" 包装对象")]),t._v(" "),a("p",[t._v("三种最基本的原始类型，数值、字符和布尔值，相对应的构造函数"),a("code",[t._v("Number")]),t._v("、"),a("code",[t._v("String")]),t._v("、"),a("code",[t._v("Boolean")]),t._v("可以把原始类型的值变成对象。")]),t._v(" "),a("div",{staticClass:"language-JavaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用new视为构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不带new则作为普通函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ss "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"valueof和tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#valueof和tostring"}},[t._v("#")]),t._v(" "),a("code",[t._v("valueOf")]),t._v("和"),a("code",[t._v("toString")])]),t._v(" "),a("p",[t._v("上面三种构造函数也继承自父亲"),a("code",[t._v("Object")]),t._v("，并继承了Object的 "),a("code",[t._v("valueOf")]),t._v("和"),a("code",[t._v("toString")]),t._v("。\n"),a("code",[t._v("valueOf")]),t._v("可以将上面的对象n\\s\\b返回内在的值")]),t._v(" "),a("div",{staticClass:"language-JavaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//123")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'a'")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("code",[t._v("toString")]),t._v("则返回成字符串形式，参考《JS的数据结构》的类型转换。")]),t._v(" "),a("h2",{attrs:{id:"proto-和prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proto-和prototype"}},[t._v("#")]),t._v(" "),a("code",[t._v("__proto__")]),t._v(" 和"),a("code",[t._v("prototype")])]),t._v(" "),a("p",[t._v("A构造了B，A就是B的原型对象，B的"),a("code",[t._v("__proto__")]),t._v("就指向了A的"),a("code",[t._v("prototype")]),t._v("。原型上面还有原型，就构成了原型链。\n三个构造函数连同"),a("code",[t._v("Object")]),t._v("都为"),a("code",[t._v("Function")]),t._v("的儿子，甚至连"),a("code",[t._v("Function")]),t._v("都是自己"),a("code",[t._v("Function")]),t._v("构造的，所以"),a("code",[t._v("__proto__")]),t._v("都指向了"),a("code",[t._v("Function.prototype")]),t._v("。\n三个构造函数的"),a("code",[t._v("prototype")]),t._v("也是对象，所以父亲是"),a("code",[t._v("Object")]),t._v("，所以"),a("code",[t._v("String.prototype.__proto__")]),t._v("指向"),a("code",[t._v("Object.prototype")]),t._v("。\n"),a("code",[t._v("Object.prototype")]),t._v("作为老父亲的，往上已经没有人了，所以"),a("code",[t._v("Object.prototype.__proto__")]),t._v("指向了"),a("code",[t._v("null")]),t._v("。")]),t._v(" "),a("p",[t._v("2019/4/20补充")]),t._v(" "),a("div",{staticClass:"language-JavaScript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://linzhihui.oss-cn-hangzhou.aliyuncs.com/personal-index/blog/%E5%8E%9F%E5%9E%8B%E9%93%BE.png",alt:"原型链"}})]),t._v(" "),a("h1",{attrs:{id:"特殊的对象-数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊的对象-数组"}},[t._v("#")]),t._v(" 特殊的对象——数组")]),t._v(" "),a("h2",{attrs:{id:"数组是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组是什么"}},[t._v("#")]),t._v(" 数组是什么")]),t._v(" "),a("p",[t._v("数组是对象的一种，是特殊的对象，和对象的差别在于：对象的"),a("code",[t._v("__proto__")]),t._v("指向了"),a("code",[t._v("Object.prototype")]),t._v("，而数组的"),a("code",[t._v("__proto__")]),t._v("指向了"),a("code",[t._v("Array.prototype")]),t._v("，"),a("code",[t._v("Array.prototype")]),t._v("的"),a("code",[t._v("__proto__")]),t._v("才指向了"),a("code",[t._v("Object.prototype")]),t._v("。\n也就是：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[3,4].__proto__  === Array.prototype //true\nArray.prototype.__proto__ === Object.prototype  //true\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("也就是说数组拥有对象的基本属性和方法，还额外拥有自己的基本属性和方法，包括了pop、push、shift等。")])])}),[],!1,null,null,null);s.default=e.exports}}]);